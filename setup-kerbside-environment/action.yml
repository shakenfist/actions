name: 'Setup kerbside environment'
description: 'Setup the basic test environment for a CI run'
inputs:
  base:
    description: 'Base cloud image'
    required: true
    default: 'debian:12'
  base_user:
    description: 'User to log into instance as'
    required: true
    default: 'debian'
  openstack_release:
    description: 'The OpenStack release to target'
    required: true
    default: 'master'
  topology:
    description: 'The topology to use (all-in-one or multinode)'
    required: true
    default: 'all-in-one'
runs:
  using: "composite"
  steps:
    - name: Set environment variables
      shell: bash
      run: |
        echo "SF_HEAD_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
        echo "SHAKENFIST_NAMESPACE=$(hostname)" >> $GITHUB_ENV

    - name: Checkout the actions repository
      uses: actions/checkout@v4
      with:
        repository: shakenfist/actions
        path: actions
        fetch-depth: 0

    - name: Checkout kerbside-patches
      uses: actions/checkout@v4
      with:
        repository: shakenfist/kerbside-patches
        path: kerbside-patches
        fetch-depth: 0

    - name: Set some more environment variables post git checkout
      shell: bash
      run: |
        . $GITHUB_ENV
        cd ${GITHUB_WORKSPACE}/kerbside-patches

        short_sha=$(git rev-parse --short HEAD)
        echo "SF_SHORT_HEAD_SHA=${short_sha}" >> $GITHUB_ENV

    - name: Install required packages
      shell: bash
      run: |
        pip_extra=""
        if [ $(python3 --version | cut -f 2 -d ".") -gt 10 ]; then
            pip_extra="--break-system-packages"
        fi
        sudo pip3 install ${pip_extra} yq

    - name: Attempt to apply patches
      shell: bash
      run: |
        . $GITHUB_ENV
        cd ${GITHUB_WORKSPACE}/kerbside-patches
        ./_build/assemble-source.sh ${{ inputs.openstack_release }}

    - name: Build infrastructure
      shell: bash
      run: |
        . $GITHUB_ENV
        cd ${GITHUB_WORKSPACE}/kerbside-patches

        if [ "${{ inputs.topology }}" == "all-in-one" ]; then
            playbook="kerbside-single-node.yml"
        else
            playbook="kerbside-multi-node.yml"
        fi
        echo "Using playbook ${playbook}"

        ansible-playbook -i /home/debian/ansible-hosts \
            --extra-vars "identifier=${SHAKENFIST_NAMESPACE} base=${{ inputs.base }}" \
            --tags all ${GITHUB_WORKSPACE}/actions/ansible/${playbook}

        # Copy the environment ssh key to the deploy node
        ssh -i /srv/github/id_ci -o StrictHostKeyChecking=no \
                -o UserKnownHostsFile=/dev/null ${{ inputs.base_user }}@10.0.2.2 \
                "sudo mkdir -p /srv/github; sudo chown -R ${{ inputs.base_user }}:${{ inputs.base_user }} /srv/github"
        scp -i /srv/github/id_ci -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null /srv/github/id_ci ${{ inputs.base_user }}@10.0.2.2:/srv/github/

    - name: Copy git repo
      shell: bash
      run: |
        . $GITHUB_ENV
        rm -rf kerbside-patches/src

        script="sudo mkdir /srv/shakenfist"
        script="$script; sudo chown -R ${{ inputs.base_user }}:${{ inputs.base_user }} /srv/shakenfist"
        ssh -i /srv/github/id_ci -o StrictHostKeyChecking=no \
                -o UserKnownHostsFile=/dev/null ${{ inputs.base_user }}@10.0.2.2 \
                "${script}"

        scp -rp -i /srv/github/id_ci -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            ${GITHUB_WORKSPACE}/kerbside-patches \
            ${{ inputs.base_user }}@10.0.2.2:/srv/shakenfist

    - name: Copy actions repo as well
      shell: bash
      run: |
        . $GITHUB_ENV
        scp -rp -i /srv/github/id_ci -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            ${GITHUB_WORKSPACE}/actions \
            ${{ inputs.base_user }}@10.0.2.2:/srv/shakenfist

    - name: Install dependencies
      shell: bash
      run: |
        . $GITHUB_ENV
        ssh -i /srv/github/id_ci -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            ${{ inputs.base_user }}@10.0.2.2 \
            'cd /srv/shakenfist/kerbside-patches; ./_build/install-build-dependencies.sh'

    - name: Setup the insecure CI registry
      shell: bash
      run: |
        . $GITHUB_ENV
        ssh -i /srv/github/id_ci -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            ${{ inputs.base_user }}@10.0.2.2 \
            'cd /srv/shakenfist/kerbside-patches; ./_build/add-insecure-ci-registry.sh'
